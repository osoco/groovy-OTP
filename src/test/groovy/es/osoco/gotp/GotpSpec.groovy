package es.osoco.gotp;

import spock.lang.*

class GotpSpec extends Specification
{
    static final T0 = 0
    static final X = 30
    static final DIGITS = '8'
    static final TOKEN_SHARED_SECRET = '12345678901234567890'

    static final String seed = "3132333435363738393031323334353637383930"
    static final String seed32 = "3132333435363738393031323334353637383930" +
            "313233343536373839303132"
    static final String seed64 = "3132333435363738393031323334353637383930" +
            "3132333435363738393031323334353637383930" +
            "3132333435363738393031323334353637383930" + "31323334"

    def "test TOTP defatul vectors"()
    {
        Long T = (testTime - T0)/X
        String steps = Long.toHexString(T).toUpperCase()

        while (steps.length() < 16)
            steps = "0" + steps;

        expect:
        steps == T_HEX
        finalPass ==  Gotp.generateTOTP(usedSeed, steps, DIGITS, mode)

        where:
        usedSeed     | testTime    | T_HEX             |  utcTime              | mode        | finalPass
        seed         | 59          | '0000000000000001'| '1970-01-01 00:00:59' | 'HmacSHA1'  | '94287082'
        seed32       | 59          | '0000000000000001'| '1970-01-01 00:00:59' | 'HmacSHA256'| '46119246'
        seed64       | 59          | '0000000000000001'| '1970-01-01 00:00:59' | 'HmacSHA512'| '90693936'
        seed         | 1111111109  | '00000000023523EC'| '2005-03-18 01:58:29' | 'HmacSHA1'  | '07081804'
        seed32       | 1111111109  | '00000000023523EC'| '2005-03-18 01:58:29' | 'HmacSHA256'| '68084774'
        seed64       | 1111111109  | '00000000023523EC'| '2005-03-18 01:58:29' | 'HmacSHA512'| '25091201'
        seed         | 1111111111  | '00000000023523ED'| '2005-03-18 01:58:31' | 'HmacSHA1'  | '14050471'
        seed32       | 1111111111  | '00000000023523ED'| '2005-03-18 01:58:31' | 'HmacSHA256'| '67062674'
        seed64       | 1111111111  | '00000000023523ED'| '2005-03-18 01:58:31' | 'HmacSHA512'| '99943326'
        seed         | 1234567890  | '000000000273EF07'| '2009-02-13 23:31:30' | 'HmacSHA1'  | '89005924'
        seed32       | 1234567890  | '000000000273EF07'| '2009-02-13 23:31:30' | 'HmacSHA256'| '91819424'
        seed64       | 1234567890  | '000000000273EF07'| '2009-02-13 23:31:30' | 'HmacSHA512'| '93441116'
        seed         | 2000000000  | '0000000003F940AA'| '2033-05-18 03:33:20' | 'HmacSHA1'  | '69279037'
        seed32       | 2000000000  | '0000000003F940AA'| '2033-05-18 03:33:20' | 'HmacSHA256'| '90698825'
        seed64       | 2000000000  | '0000000003F940AA'| '2033-05-18 03:33:20' | 'HmacSHA512'| '38618901'
        seed         | 20000000000 | '0000000027BC86AA'| '2603-10-11 11:33:20' | 'HmacSHA1'  | '65353130'
        seed32       | 20000000000 | '0000000027BC86AA'| '2603-10-11 11:33:20' | 'HmacSHA256'| '77737706'
        seed64       | 20000000000 | '0000000027BC86AA'| '2603-10-11 11:33:20' | 'HmacSHA512'| '47863826'
    }
}
